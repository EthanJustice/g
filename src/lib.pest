// types
number = @{ ASCII_DIGIT+ }

// taken from https://pest.rs/book/examples/json.html
string = ${ "\"" ~ inner ~ "\"" }
inner = @{ char* }
char = {
    !("\"" | "\\") ~ ANY
    | "\\" ~ ("\"" | "\\" | "/" | "b" | "f" | "n" | "r" | "t")
    | "\\" ~ ("u" ~ ASCII_HEX_DIGIT{4})
}

// umbrella (any) type
any_type = { number | string }

// operations
operation = @{ add | subtract | multiply | divide | divide_with_remainder | exponent | radical }
    add                   = { "+" }
    subtract              = { "-" }
    multiply              = { "*" }
    divide                = { "/" }
    divide_with_remainder = { "%" }
    exponent              = { "**" }
    radical               = { "*/*" }

expression = { number ~ operation ~ number }

// variable validation
valid_variable_name = { ASCII_ALPHA+ ~ "_"? ~ ASCII_ALPHA+ }

// variable declarations
let_variable = { "let " ~ valid_variable_name ~ " "? ~ "=" ~ " "? ~ any_type }
man_variable = { "man " ~ string ~ " as " ~ valid_variable_name ~ " "? ~ "=" ~ " "? ~ any_type }
const_variable = { "const " ~ valid_variable_name ~ " "? ~ "=" ~ " "? ~ any_type }

// modules
import_pkg = { "use " ~ string }
